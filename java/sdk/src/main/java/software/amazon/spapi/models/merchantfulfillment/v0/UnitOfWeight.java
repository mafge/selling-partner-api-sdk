/*
 * Selling Partner API for Merchant Fulfillment
 * With the Selling Partner API for Merchant Fulfillment, you can build applications that sellers can use to purchase shipping for non-Prime and Prime orders using Amazon's Buy Shipping Services.
 *
 * OpenAPI spec version: v0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package software.amazon.spapi.models.merchantfulfillment.v0;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

/** The unit of weight. */
@JsonAdapter(UnitOfWeight.Adapter.class)
public enum UnitOfWeight {
    @SerializedName("oz")
    OZ("oz"),
    @SerializedName("g")
    G("g");

    private String value;

    UnitOfWeight(String value) {
        this.value = value;
    }

    public String getValue() {
        return value;
    }

    @Override
    public String toString() {
        return String.valueOf(value);
    }

    public static UnitOfWeight fromValue(String input) {
        for (UnitOfWeight b : UnitOfWeight.values()) {
            if (b.value.equals(input)) {
                return b;
            }
        }
        return null;
    }

    public static class Adapter extends TypeAdapter<UnitOfWeight> {
        @Override
        public void write(final JsonWriter jsonWriter, final UnitOfWeight enumeration) throws IOException {
            jsonWriter.value(String.valueOf(enumeration.getValue()));
        }

        @Override
        public UnitOfWeight read(final JsonReader jsonReader) throws IOException {
            Object value = jsonReader.nextString();
            return UnitOfWeight.fromValue((String) (value));
        }
    }
}
