/*
 * Selling Partner API for Direct Fulfillment Shipping
 * Use the Selling Partner API for Direct Fulfillment Shipping to access a direct fulfillment vendor's shipping data.
 *
 * OpenAPI spec version: 2021-12-28
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package software.amazon.spapi.models.vendor.df.shipping.v2021_12_28;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.Objects;

/** The request body schema for the &#x60;createContainerLabel&#x60; operation. */
@Schema(description = "The request body schema for the `createContainerLabel` operation.")
public class CreateContainerLabelRequest {
    @SerializedName("sellingParty")
    private PartyIdentification sellingParty = null;

    @SerializedName("shipFromParty")
    private PartyIdentification shipFromParty = null;

    @SerializedName("carrierId")
    private CarrierId carrierId = null;

    @SerializedName("vendorContainerId")
    private String vendorContainerId = null;

    @SerializedName("packages")
    private Packages packages = null;

    public CreateContainerLabelRequest sellingParty(PartyIdentification sellingParty) {
        this.sellingParty = sellingParty;
        return this;
    }

    /**
     * Get sellingParty
     *
     * @return sellingParty
     */
    @Schema(required = true, description = "")
    public PartyIdentification getSellingParty() {
        return sellingParty;
    }

    public void setSellingParty(PartyIdentification sellingParty) {
        this.sellingParty = sellingParty;
    }

    public CreateContainerLabelRequest shipFromParty(PartyIdentification shipFromParty) {
        this.shipFromParty = shipFromParty;
        return this;
    }

    /**
     * Get shipFromParty
     *
     * @return shipFromParty
     */
    @Schema(required = true, description = "")
    public PartyIdentification getShipFromParty() {
        return shipFromParty;
    }

    public void setShipFromParty(PartyIdentification shipFromParty) {
        this.shipFromParty = shipFromParty;
    }

    public CreateContainerLabelRequest carrierId(CarrierId carrierId) {
        this.carrierId = carrierId;
        return this;
    }

    /**
     * Get carrierId
     *
     * @return carrierId
     */
    @Schema(required = true, description = "")
    public CarrierId getCarrierId() {
        return carrierId;
    }

    public void setCarrierId(CarrierId carrierId) {
        this.carrierId = carrierId;
    }

    public CreateContainerLabelRequest vendorContainerId(String vendorContainerId) {
        this.vendorContainerId = vendorContainerId;
        return this;
    }

    /**
     * Get vendorContainerId
     *
     * @return vendorContainerId
     */
    @Schema(required = true, description = "")
    public String getVendorContainerId() {
        return vendorContainerId;
    }

    public void setVendorContainerId(String vendorContainerId) {
        this.vendorContainerId = vendorContainerId;
    }

    public CreateContainerLabelRequest packages(Packages packages) {
        this.packages = packages;
        return this;
    }

    /**
     * Get packages
     *
     * @return packages
     */
    @Schema(required = true, description = "")
    public Packages getPackages() {
        return packages;
    }

    public void setPackages(Packages packages) {
        this.packages = packages;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        CreateContainerLabelRequest createContainerLabelRequest = (CreateContainerLabelRequest) o;
        return Objects.equals(this.sellingParty, createContainerLabelRequest.sellingParty)
                && Objects.equals(this.shipFromParty, createContainerLabelRequest.shipFromParty)
                && Objects.equals(this.carrierId, createContainerLabelRequest.carrierId)
                && Objects.equals(this.vendorContainerId, createContainerLabelRequest.vendorContainerId)
                && Objects.equals(this.packages, createContainerLabelRequest.packages);
    }

    @Override
    public int hashCode() {
        return Objects.hash(sellingParty, shipFromParty, carrierId, vendorContainerId, packages);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class CreateContainerLabelRequest {\n");

        sb.append("    sellingParty: ").append(toIndentedString(sellingParty)).append("\n");
        sb.append("    shipFromParty: ").append(toIndentedString(shipFromParty)).append("\n");
        sb.append("    carrierId: ").append(toIndentedString(carrierId)).append("\n");
        sb.append("    vendorContainerId: ")
                .append(toIndentedString(vendorContainerId))
                .append("\n");
        sb.append("    packages: ").append(toIndentedString(packages)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /** Convert the given object to string with each line indented by 4 spaces (except the first line). */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }
}
