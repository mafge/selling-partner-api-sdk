/*
 * Selling Partner API for Direct Fulfillment Shipping
 * Use the Selling Partner API for Direct Fulfillment Shipping to access a direct fulfillment vendor's shipping data.
 *
 * OpenAPI spec version: 2021-12-28
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package software.amazon.spapi.models.vendor.df.shipping.v2021_12_28;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.Objects;

/** The details of the container label. */
@Schema(description = "The details of the container label.")
public class ContainerLabel {
    @SerializedName("containerTrackingNumber")
    private String containerTrackingNumber = null;

    @SerializedName("content")
    private String content = null;

    @SerializedName("format")
    private ContainerLabelFormat format = null;

    public ContainerLabel containerTrackingNumber(String containerTrackingNumber) {
        this.containerTrackingNumber = containerTrackingNumber;
        return this;
    }

    /**
     * The container (pallet) tracking identifier from the shipping carrier.
     *
     * @return containerTrackingNumber
     */
    @Schema(description = "The container (pallet) tracking identifier from the shipping carrier.")
    public String getContainerTrackingNumber() {
        return containerTrackingNumber;
    }

    public void setContainerTrackingNumber(String containerTrackingNumber) {
        this.containerTrackingNumber = containerTrackingNumber;
    }

    public ContainerLabel content(String content) {
        this.content = content;
        return this;
    }

    /**
     * The container label content encoded into a Base64 string.
     *
     * @return content
     */
    @Schema(required = true, description = "The container label content encoded into a Base64 string.")
    public String getContent() {
        return content;
    }

    public void setContent(String content) {
        this.content = content;
    }

    public ContainerLabel format(ContainerLabelFormat format) {
        this.format = format;
        return this;
    }

    /**
     * Get format
     *
     * @return format
     */
    @Schema(required = true, description = "")
    public ContainerLabelFormat getFormat() {
        return format;
    }

    public void setFormat(ContainerLabelFormat format) {
        this.format = format;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ContainerLabel containerLabel = (ContainerLabel) o;
        return Objects.equals(this.containerTrackingNumber, containerLabel.containerTrackingNumber)
                && Objects.equals(this.content, containerLabel.content)
                && Objects.equals(this.format, containerLabel.format);
    }

    @Override
    public int hashCode() {
        return Objects.hash(containerTrackingNumber, content, format);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class ContainerLabel {\n");

        sb.append("    containerTrackingNumber: ")
                .append(toIndentedString(containerTrackingNumber))
                .append("\n");
        sb.append("    content: ").append(toIndentedString(content)).append("\n");
        sb.append("    format: ").append(toIndentedString(format)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /** Convert the given object to string with each line indented by 4 spaces (except the first line). */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }
}
