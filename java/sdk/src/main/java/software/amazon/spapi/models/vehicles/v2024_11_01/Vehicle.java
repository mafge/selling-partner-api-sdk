/*
 * The Selling Partner API for Automotive.
 * The Selling Partner API for Automotive provides programmatic access to information needed by selling partners to provide compatibility information about their listed products.
 *
 * OpenAPI spec version: 2024-11-01
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package software.amazon.spapi.models.vehicles.v2024_11_01;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/** Combinations of attributes and unique identifier that represents a vehicle in vehicle list. */
@Schema(description = "Combinations of attributes and unique identifier that represents a vehicle in vehicle list.")
public class Vehicle {
    @SerializedName("make")
    private String make = null;

    @SerializedName("model")
    private String model = null;

    @SerializedName("variantName")
    private String variantName = null;

    @SerializedName("bodyStyle")
    private String bodyStyle = null;

    @SerializedName("driveType")
    private String driveType = null;

    @SerializedName("energy")
    private String energy = null;

    @SerializedName("engineOutput")
    private List<EngineOutput> engineOutput = null;

    @SerializedName("manufacturingStartDate")
    private MonthAndYear manufacturingStartDate = null;

    @SerializedName("manufacturingStopDate")
    private MonthAndYear manufacturingStopDate = null;

    @SerializedName("lastProcessedDate")
    private String lastProcessedDate = null;

    @SerializedName("status")
    private VehicleStatusInCatalog status = null;

    @SerializedName("identifiers")
    private List<VehicleIdentifiers> identifiers = new ArrayList<VehicleIdentifiers>();

    public Vehicle make(String make) {
        this.make = make;
        return this;
    }

    /**
     * Vehicle Brand.
     *
     * @return make
     */
    @Schema(required = true, description = "Vehicle Brand.")
    public String getMake() {
        return make;
    }

    public void setMake(String make) {
        this.make = make;
    }

    public Vehicle model(String model) {
        this.model = model;
        return this;
    }

    /**
     * Specific model of a vehicle.
     *
     * @return model
     */
    @Schema(required = true, description = "Specific model of a vehicle.")
    public String getModel() {
        return model;
    }

    public void setModel(String model) {
        this.model = model;
    }

    public Vehicle variantName(String variantName) {
        this.variantName = variantName;
        return this;
    }

    /**
     * Name of the vehicle variant.
     *
     * @return variantName
     */
    @Schema(description = "Name of the vehicle variant.")
    public String getVariantName() {
        return variantName;
    }

    public void setVariantName(String variantName) {
        this.variantName = variantName;
    }

    public Vehicle bodyStyle(String bodyStyle) {
        this.bodyStyle = bodyStyle;
        return this;
    }

    /**
     * Body style of vehicle (example: Hatchback, Cabriolet).
     *
     * @return bodyStyle
     */
    @Schema(description = "Body style of vehicle (example: Hatchback, Cabriolet).")
    public String getBodyStyle() {
        return bodyStyle;
    }

    public void setBodyStyle(String bodyStyle) {
        this.bodyStyle = bodyStyle;
    }

    public Vehicle driveType(String driveType) {
        this.driveType = driveType;
        return this;
    }

    /**
     * Drive type of vehicle(example: Rear wheel drive).
     *
     * @return driveType
     */
    @Schema(description = "Drive type of vehicle(example: Rear wheel drive).")
    public String getDriveType() {
        return driveType;
    }

    public void setDriveType(String driveType) {
        this.driveType = driveType;
    }

    public Vehicle energy(String energy) {
        this.energy = energy;
        return this;
    }

    /**
     * Energy Source for the vehicle(example: Petrol)
     *
     * @return energy
     */
    @Schema(description = "Energy Source for the vehicle(example: Petrol)")
    public String getEnergy() {
        return energy;
    }

    public void setEnergy(String energy) {
        this.energy = energy;
    }

    public Vehicle engineOutput(List<EngineOutput> engineOutput) {
        this.engineOutput = engineOutput;
        return this;
    }

    public Vehicle addEngineOutputItem(EngineOutput engineOutputItem) {
        if (this.engineOutput == null) {
            this.engineOutput = new ArrayList<EngineOutput>();
        }
        this.engineOutput.add(engineOutputItem);
        return this;
    }

    /**
     * Engine output of vehicle.
     *
     * @return engineOutput
     */
    @Schema(description = "Engine output of vehicle.")
    public List<EngineOutput> getEngineOutput() {
        return engineOutput;
    }

    public void setEngineOutput(List<EngineOutput> engineOutput) {
        this.engineOutput = engineOutput;
    }

    public Vehicle manufacturingStartDate(MonthAndYear manufacturingStartDate) {
        this.manufacturingStartDate = manufacturingStartDate;
        return this;
    }

    /**
     * Get manufacturingStartDate
     *
     * @return manufacturingStartDate
     */
    @Schema(description = "")
    public MonthAndYear getManufacturingStartDate() {
        return manufacturingStartDate;
    }

    public void setManufacturingStartDate(MonthAndYear manufacturingStartDate) {
        this.manufacturingStartDate = manufacturingStartDate;
    }

    public Vehicle manufacturingStopDate(MonthAndYear manufacturingStopDate) {
        this.manufacturingStopDate = manufacturingStopDate;
        return this;
    }

    /**
     * Get manufacturingStopDate
     *
     * @return manufacturingStopDate
     */
    @Schema(description = "")
    public MonthAndYear getManufacturingStopDate() {
        return manufacturingStopDate;
    }

    public void setManufacturingStopDate(MonthAndYear manufacturingStopDate) {
        this.manufacturingStopDate = manufacturingStopDate;
    }

    public Vehicle lastProcessedDate(String lastProcessedDate) {
        this.lastProcessedDate = lastProcessedDate;
        return this;
    }

    /**
     * The date on which the vehicle was last updated, in ISO-8601 date/time format.
     *
     * @return lastProcessedDate
     */
    @Schema(description = "The date on which the vehicle was last updated, in ISO-8601 date/time format.")
    public String getLastProcessedDate() {
        return lastProcessedDate;
    }

    public void setLastProcessedDate(String lastProcessedDate) {
        this.lastProcessedDate = lastProcessedDate;
    }

    public Vehicle status(VehicleStatusInCatalog status) {
        this.status = status;
        return this;
    }

    /**
     * Get status
     *
     * @return status
     */
    @Schema(description = "")
    public VehicleStatusInCatalog getStatus() {
        return status;
    }

    public void setStatus(VehicleStatusInCatalog status) {
        this.status = status;
    }

    public Vehicle identifiers(List<VehicleIdentifiers> identifiers) {
        this.identifiers = identifiers;
        return this;
    }

    public Vehicle addIdentifiersItem(VehicleIdentifiers identifiersItem) {
        this.identifiers.add(identifiersItem);
        return this;
    }

    /**
     * Identifiers that can be used to identify the vehicle uniquely
     *
     * @return identifiers
     */
    @Schema(required = true, description = "Identifiers that can be used to identify the vehicle uniquely")
    public List<VehicleIdentifiers> getIdentifiers() {
        return identifiers;
    }

    public void setIdentifiers(List<VehicleIdentifiers> identifiers) {
        this.identifiers = identifiers;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        Vehicle vehicle = (Vehicle) o;
        return Objects.equals(this.make, vehicle.make)
                && Objects.equals(this.model, vehicle.model)
                && Objects.equals(this.variantName, vehicle.variantName)
                && Objects.equals(this.bodyStyle, vehicle.bodyStyle)
                && Objects.equals(this.driveType, vehicle.driveType)
                && Objects.equals(this.energy, vehicle.energy)
                && Objects.equals(this.engineOutput, vehicle.engineOutput)
                && Objects.equals(this.manufacturingStartDate, vehicle.manufacturingStartDate)
                && Objects.equals(this.manufacturingStopDate, vehicle.manufacturingStopDate)
                && Objects.equals(this.lastProcessedDate, vehicle.lastProcessedDate)
                && Objects.equals(this.status, vehicle.status)
                && Objects.equals(this.identifiers, vehicle.identifiers);
    }

    @Override
    public int hashCode() {
        return Objects.hash(
                make,
                model,
                variantName,
                bodyStyle,
                driveType,
                energy,
                engineOutput,
                manufacturingStartDate,
                manufacturingStopDate,
                lastProcessedDate,
                status,
                identifiers);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class Vehicle {\n");

        sb.append("    make: ").append(toIndentedString(make)).append("\n");
        sb.append("    model: ").append(toIndentedString(model)).append("\n");
        sb.append("    variantName: ").append(toIndentedString(variantName)).append("\n");
        sb.append("    bodyStyle: ").append(toIndentedString(bodyStyle)).append("\n");
        sb.append("    driveType: ").append(toIndentedString(driveType)).append("\n");
        sb.append("    energy: ").append(toIndentedString(energy)).append("\n");
        sb.append("    engineOutput: ").append(toIndentedString(engineOutput)).append("\n");
        sb.append("    manufacturingStartDate: ")
                .append(toIndentedString(manufacturingStartDate))
                .append("\n");
        sb.append("    manufacturingStopDate: ")
                .append(toIndentedString(manufacturingStopDate))
                .append("\n");
        sb.append("    lastProcessedDate: ")
                .append(toIndentedString(lastProcessedDate))
                .append("\n");
        sb.append("    status: ").append(toIndentedString(status)).append("\n");
        sb.append("    identifiers: ").append(toIndentedString(identifiers)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /** Convert the given object to string with each line indented by 4 spaces (except the first line). */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }
}
