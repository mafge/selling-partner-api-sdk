/*
 * Selling Partner API for Retail Procurement Payments
 * The Selling Partner API for Retail Procurement Payments provides programmatic access to vendors payments data.
 *
 * OpenAPI spec version: v1
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package software.amazon.spapi.models.vendor.invoices.v1;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

/** This field represents weight unit of measure of items that are ordered by cases and supporting priced by weight. */
@JsonAdapter(NetCostUnitOfMeasure.Adapter.class)
public enum NetCostUnitOfMeasure {
    @SerializedName("POUNDS")
    POUNDS("POUNDS"),
    @SerializedName("OUNCES")
    OUNCES("OUNCES"),
    @SerializedName("GRAMS")
    GRAMS("GRAMS"),
    @SerializedName("KILOGRAMS")
    KILOGRAMS("KILOGRAMS");

    private String value;

    NetCostUnitOfMeasure(String value) {
        this.value = value;
    }

    public String getValue() {
        return value;
    }

    @Override
    public String toString() {
        return String.valueOf(value);
    }

    public static NetCostUnitOfMeasure fromValue(String input) {
        for (NetCostUnitOfMeasure b : NetCostUnitOfMeasure.values()) {
            if (b.value.equals(input)) {
                return b;
            }
        }
        return null;
    }

    public static class Adapter extends TypeAdapter<NetCostUnitOfMeasure> {
        @Override
        public void write(final JsonWriter jsonWriter, final NetCostUnitOfMeasure enumeration) throws IOException {
            jsonWriter.value(String.valueOf(enumeration.getValue()));
        }

        @Override
        public NetCostUnitOfMeasure read(final JsonReader jsonReader) throws IOException {
            Object value = jsonReader.nextString();
            return NetCostUnitOfMeasure.fromValue((String) (value));
        }
    }
}
