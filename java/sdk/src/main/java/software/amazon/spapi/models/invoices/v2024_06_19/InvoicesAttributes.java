/*
 * The Selling Partner API for Invoices.
 * Use the Selling Partner API for Invoices to retrieve and manage invoice-related operations, which can help selling partners manage their bookkeeping processes.
 *
 * OpenAPI spec version: 2024-06-19
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package software.amazon.spapi.models.invoices.v2024_06_19;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/** An object that contains the invoice attributes definition. */
@Schema(description = "An object that contains the invoice attributes definition.")
public class InvoicesAttributes {
    @SerializedName("invoiceStatusOptions")
    private List<AttributeOption> invoiceStatusOptions = null;

    @SerializedName("invoiceTypeOptions")
    private List<AttributeOption> invoiceTypeOptions = null;

    @SerializedName("transactionIdentifierNameOptions")
    private List<AttributeOption> transactionIdentifierNameOptions = null;

    @SerializedName("transactionTypeOptions")
    private List<AttributeOption> transactionTypeOptions = null;

    public InvoicesAttributes invoiceStatusOptions(List<AttributeOption> invoiceStatusOptions) {
        this.invoiceStatusOptions = invoiceStatusOptions;
        return this;
    }

    public InvoicesAttributes addInvoiceStatusOptionsItem(AttributeOption invoiceStatusOptionsItem) {
        if (this.invoiceStatusOptions == null) {
            this.invoiceStatusOptions = new ArrayList<AttributeOption>();
        }
        this.invoiceStatusOptions.add(invoiceStatusOptionsItem);
        return this;
    }

    /**
     * A list of all the options that are available for the invoice status attribute.
     *
     * @return invoiceStatusOptions
     */
    @Schema(description = "A list of all the options that are available for the invoice status attribute.")
    public List<AttributeOption> getInvoiceStatusOptions() {
        return invoiceStatusOptions;
    }

    public void setInvoiceStatusOptions(List<AttributeOption> invoiceStatusOptions) {
        this.invoiceStatusOptions = invoiceStatusOptions;
    }

    public InvoicesAttributes invoiceTypeOptions(List<AttributeOption> invoiceTypeOptions) {
        this.invoiceTypeOptions = invoiceTypeOptions;
        return this;
    }

    public InvoicesAttributes addInvoiceTypeOptionsItem(AttributeOption invoiceTypeOptionsItem) {
        if (this.invoiceTypeOptions == null) {
            this.invoiceTypeOptions = new ArrayList<AttributeOption>();
        }
        this.invoiceTypeOptions.add(invoiceTypeOptionsItem);
        return this;
    }

    /**
     * A list of all the options that are available for the invoice type attribute.
     *
     * @return invoiceTypeOptions
     */
    @Schema(description = "A list of all the options that are available for the invoice type attribute.")
    public List<AttributeOption> getInvoiceTypeOptions() {
        return invoiceTypeOptions;
    }

    public void setInvoiceTypeOptions(List<AttributeOption> invoiceTypeOptions) {
        this.invoiceTypeOptions = invoiceTypeOptions;
    }

    public InvoicesAttributes transactionIdentifierNameOptions(List<AttributeOption> transactionIdentifierNameOptions) {
        this.transactionIdentifierNameOptions = transactionIdentifierNameOptions;
        return this;
    }

    public InvoicesAttributes addTransactionIdentifierNameOptionsItem(
            AttributeOption transactionIdentifierNameOptionsItem) {
        if (this.transactionIdentifierNameOptions == null) {
            this.transactionIdentifierNameOptions = new ArrayList<AttributeOption>();
        }
        this.transactionIdentifierNameOptions.add(transactionIdentifierNameOptionsItem);
        return this;
    }

    /**
     * A list of all the options that are available for the transaction identifier name attribute.
     *
     * @return transactionIdentifierNameOptions
     */
    @Schema(description = "A list of all the options that are available for the transaction identifier name attribute.")
    public List<AttributeOption> getTransactionIdentifierNameOptions() {
        return transactionIdentifierNameOptions;
    }

    public void setTransactionIdentifierNameOptions(List<AttributeOption> transactionIdentifierNameOptions) {
        this.transactionIdentifierNameOptions = transactionIdentifierNameOptions;
    }

    public InvoicesAttributes transactionTypeOptions(List<AttributeOption> transactionTypeOptions) {
        this.transactionTypeOptions = transactionTypeOptions;
        return this;
    }

    public InvoicesAttributes addTransactionTypeOptionsItem(AttributeOption transactionTypeOptionsItem) {
        if (this.transactionTypeOptions == null) {
            this.transactionTypeOptions = new ArrayList<AttributeOption>();
        }
        this.transactionTypeOptions.add(transactionTypeOptionsItem);
        return this;
    }

    /**
     * A list of all the options that are available for the transaction type attribute.
     *
     * @return transactionTypeOptions
     */
    @Schema(description = "A list of all the options that are available for the transaction type attribute.")
    public List<AttributeOption> getTransactionTypeOptions() {
        return transactionTypeOptions;
    }

    public void setTransactionTypeOptions(List<AttributeOption> transactionTypeOptions) {
        this.transactionTypeOptions = transactionTypeOptions;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        InvoicesAttributes invoicesAttributes = (InvoicesAttributes) o;
        return Objects.equals(this.invoiceStatusOptions, invoicesAttributes.invoiceStatusOptions)
                && Objects.equals(this.invoiceTypeOptions, invoicesAttributes.invoiceTypeOptions)
                && Objects.equals(
                        this.transactionIdentifierNameOptions, invoicesAttributes.transactionIdentifierNameOptions)
                && Objects.equals(this.transactionTypeOptions, invoicesAttributes.transactionTypeOptions);
    }

    @Override
    public int hashCode() {
        return Objects.hash(
                invoiceStatusOptions, invoiceTypeOptions, transactionIdentifierNameOptions, transactionTypeOptions);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class InvoicesAttributes {\n");

        sb.append("    invoiceStatusOptions: ")
                .append(toIndentedString(invoiceStatusOptions))
                .append("\n");
        sb.append("    invoiceTypeOptions: ")
                .append(toIndentedString(invoiceTypeOptions))
                .append("\n");
        sb.append("    transactionIdentifierNameOptions: ")
                .append(toIndentedString(transactionIdentifierNameOptions))
                .append("\n");
        sb.append("    transactionTypeOptions: ")
                .append(toIndentedString(transactionTypeOptions))
                .append("\n");
        sb.append("}");
        return sb.toString();
    }

    /** Convert the given object to string with each line indented by 4 spaces (except the first line). */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }
}
