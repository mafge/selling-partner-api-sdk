/*
 * Selling Partner API for Orders
 * Use the Orders Selling Partner API to programmatically retrieve order information. With this API, you can develop fast, flexible, and custom applications to manage order synchronization, perform order research, and create demand-based decision support tools.   _Note:_ For the JP, AU, and SG marketplaces, the Orders API supports orders from 2016 onward. For all other marketplaces, the Orders API supports orders for the last two years (orders older than this don't show up in the response).
 *
 * OpenAPI spec version: v0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package software.amazon.spapi.models.orders.v0;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.Objects;

/** Contains information that is related to the export of an order item. */
@Schema(description = "Contains information that is related to the export of an order item.")
public class ExportInfo {
    @SerializedName("ExportCharge")
    private Money exportCharge = null;

    @SerializedName("ExportChargeModel")
    private String exportChargeModel = null;

    public ExportInfo exportCharge(Money exportCharge) {
        this.exportCharge = exportCharge;
        return this;
    }

    /**
     * Get exportCharge
     *
     * @return exportCharge
     */
    @Schema(description = "")
    public Money getExportCharge() {
        return exportCharge;
    }

    public void setExportCharge(Money exportCharge) {
        this.exportCharge = exportCharge;
    }

    public ExportInfo exportChargeModel(String exportChargeModel) {
        this.exportChargeModel = exportChargeModel;
        return this;
    }

    /**
     * Holds the &#x60;ExportCharge&#x60; collection model that is associated with the specified order
     * item.\\n\\n**Possible values**: &#x60;AMAZON_FACILITATED&#x60;: Import/export charge is withheld by Amazon and
     * remitted to the customs authority by the carrier on behalf of the buyer/seller.
     *
     * @return exportChargeModel
     */
    @Schema(
            description =
                    "Holds the `ExportCharge` collection model that is associated with the specified order item.\\n\\n**Possible values**: `AMAZON_FACILITATED`: Import/export charge is withheld by Amazon and remitted to the customs authority by the carrier on behalf of the buyer/seller.")
    public String getExportChargeModel() {
        return exportChargeModel;
    }

    public void setExportChargeModel(String exportChargeModel) {
        this.exportChargeModel = exportChargeModel;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ExportInfo exportInfo = (ExportInfo) o;
        return Objects.equals(this.exportCharge, exportInfo.exportCharge)
                && Objects.equals(this.exportChargeModel, exportInfo.exportChargeModel);
    }

    @Override
    public int hashCode() {
        return Objects.hash(exportCharge, exportChargeModel);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class ExportInfo {\n");

        sb.append("    exportCharge: ").append(toIndentedString(exportCharge)).append("\n");
        sb.append("    exportChargeModel: ")
                .append(toIndentedString(exportChargeModel))
                .append("\n");
        sb.append("}");
        return sb.toString();
    }

    /** Convert the given object to string with each line indented by 4 spaces (except the first line). */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }
}
