/*
 * Selling Partner API for Merchant Fulfillment
 * With the Selling Partner API for Merchant Fulfillment, you can build applications that sellers can use to purchase shipping for non-Prime and Prime orders using Amazon's Buy Shipping Services.
 *
 * OpenAPI spec version: v0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package software.amazon.spapi.models.merchantfulfillment.v0;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.Objects;

/**
 * Benefits that are included and excluded for each shipping offer. Benefits represents services provided by Amazon (for
 * example, &#x60;CLAIMS_PROTECTED&#x60;) when sellers purchase shipping through Amazon. Benefit details are made
 * available for any shipment placed on or after January 1st 2024 00:00 UTC.
 */
@Schema(
        description =
                "Benefits that are included and excluded for each shipping offer. Benefits represents services provided by Amazon (for example, `CLAIMS_PROTECTED`) when sellers purchase shipping through Amazon. Benefit details are made available for any shipment placed on or after January 1st 2024 00:00 UTC.")
public class Benefits {
    @SerializedName("IncludedBenefits")
    private IncludedBenefits includedBenefits = null;

    @SerializedName("ExcludedBenefits")
    private ExcludedBenefits excludedBenefits = null;

    public Benefits includedBenefits(IncludedBenefits includedBenefits) {
        this.includedBenefits = includedBenefits;
        return this;
    }

    /**
     * Get includedBenefits
     *
     * @return includedBenefits
     */
    @Schema(description = "")
    public IncludedBenefits getIncludedBenefits() {
        return includedBenefits;
    }

    public void setIncludedBenefits(IncludedBenefits includedBenefits) {
        this.includedBenefits = includedBenefits;
    }

    public Benefits excludedBenefits(ExcludedBenefits excludedBenefits) {
        this.excludedBenefits = excludedBenefits;
        return this;
    }

    /**
     * Get excludedBenefits
     *
     * @return excludedBenefits
     */
    @Schema(description = "")
    public ExcludedBenefits getExcludedBenefits() {
        return excludedBenefits;
    }

    public void setExcludedBenefits(ExcludedBenefits excludedBenefits) {
        this.excludedBenefits = excludedBenefits;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        Benefits benefits = (Benefits) o;
        return Objects.equals(this.includedBenefits, benefits.includedBenefits)
                && Objects.equals(this.excludedBenefits, benefits.excludedBenefits);
    }

    @Override
    public int hashCode() {
        return Objects.hash(includedBenefits, excludedBenefits);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class Benefits {\n");

        sb.append("    includedBenefits: ")
                .append(toIndentedString(includedBenefits))
                .append("\n");
        sb.append("    excludedBenefits: ")
                .append(toIndentedString(excludedBenefits))
                .append("\n");
        sb.append("}");
        return sb.toString();
    }

    /** Convert the given object to string with each line indented by 4 spaces (except the first line). */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }
}
