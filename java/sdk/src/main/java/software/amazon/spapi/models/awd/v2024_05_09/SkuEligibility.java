/*
 * The Selling Partner API for Amazon Warehousing and Distribution
 * The Selling Partner API for Amazon Warehousing and Distribution (AWD) provides programmatic access to information about AWD shipments and inventory.
 *
 * OpenAPI spec version: 2024-05-09
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package software.amazon.spapi.models.awd.v2024_05_09;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/** Represents eligibility of one SKU. */
@Schema(description = "Represents eligibility of one SKU.")
public class SkuEligibility {
    @SerializedName("ineligibilityReasons")
    private List<SkuIneligibilityReason> ineligibilityReasons = null;

    @SerializedName("packageQuantity")
    private DistributionPackageQuantity packageQuantity = null;

    @SerializedName("status")
    private InboundEligibilityStatus status = null;

    public SkuEligibility ineligibilityReasons(List<SkuIneligibilityReason> ineligibilityReasons) {
        this.ineligibilityReasons = ineligibilityReasons;
        return this;
    }

    public SkuEligibility addIneligibilityReasonsItem(SkuIneligibilityReason ineligibilityReasonsItem) {
        if (this.ineligibilityReasons == null) {
            this.ineligibilityReasons = new ArrayList<SkuIneligibilityReason>();
        }
        this.ineligibilityReasons.add(ineligibilityReasonsItem);
        return this;
    }

    /**
     * If not eligible, these are list of error codes and descriptions.
     *
     * @return ineligibilityReasons
     */
    @Schema(description = "If not eligible, these are list of error codes and descriptions.")
    public List<SkuIneligibilityReason> getIneligibilityReasons() {
        return ineligibilityReasons;
    }

    public void setIneligibilityReasons(List<SkuIneligibilityReason> ineligibilityReasons) {
        this.ineligibilityReasons = ineligibilityReasons;
    }

    public SkuEligibility packageQuantity(DistributionPackageQuantity packageQuantity) {
        this.packageQuantity = packageQuantity;
        return this;
    }

    /**
     * Get packageQuantity
     *
     * @return packageQuantity
     */
    @Schema(required = true, description = "")
    public DistributionPackageQuantity getPackageQuantity() {
        return packageQuantity;
    }

    public void setPackageQuantity(DistributionPackageQuantity packageQuantity) {
        this.packageQuantity = packageQuantity;
    }

    public SkuEligibility status(InboundEligibilityStatus status) {
        this.status = status;
        return this;
    }

    /**
     * Get status
     *
     * @return status
     */
    @Schema(required = true, description = "")
    public InboundEligibilityStatus getStatus() {
        return status;
    }

    public void setStatus(InboundEligibilityStatus status) {
        this.status = status;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        SkuEligibility skuEligibility = (SkuEligibility) o;
        return Objects.equals(this.ineligibilityReasons, skuEligibility.ineligibilityReasons)
                && Objects.equals(this.packageQuantity, skuEligibility.packageQuantity)
                && Objects.equals(this.status, skuEligibility.status);
    }

    @Override
    public int hashCode() {
        return Objects.hash(ineligibilityReasons, packageQuantity, status);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class SkuEligibility {\n");

        sb.append("    ineligibilityReasons: ")
                .append(toIndentedString(ineligibilityReasons))
                .append("\n");
        sb.append("    packageQuantity: ")
                .append(toIndentedString(packageQuantity))
                .append("\n");
        sb.append("    status: ").append(toIndentedString(status)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /** Convert the given object to string with each line indented by 4 spaces (except the first line). */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }
}
