/*
 * Selling Partner API for Direct Fulfillment Shipping
 * Use the Selling Partner API for Direct Fulfillment Shipping to access a direct fulfillment vendor's shipping data.
 *
 * OpenAPI spec version: 2021-12-28
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package software.amazon.spapi.models.vendor.df.shipping.v2021_12_28;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.Objects;

/** Represents a customer invoice associated with a purchase order. */
@Schema(description = "Represents a customer invoice associated with a purchase order.")
public class CustomerInvoice {
    @SerializedName("purchaseOrderNumber")
    private String purchaseOrderNumber = null;

    @SerializedName("content")
    private String content = null;

    public CustomerInvoice purchaseOrderNumber(String purchaseOrderNumber) {
        this.purchaseOrderNumber = purchaseOrderNumber;
        return this;
    }

    /**
     * The purchase order number for this order.
     *
     * @return purchaseOrderNumber
     */
    @Schema(required = true, description = "The purchase order number for this order.")
    public String getPurchaseOrderNumber() {
        return purchaseOrderNumber;
    }

    public void setPurchaseOrderNumber(String purchaseOrderNumber) {
        this.purchaseOrderNumber = purchaseOrderNumber;
    }

    public CustomerInvoice content(String content) {
        this.content = content;
        return this;
    }

    /**
     * The Base64 customer invoice.
     *
     * @return content
     */
    @Schema(required = true, description = "The Base64 customer invoice.")
    public String getContent() {
        return content;
    }

    public void setContent(String content) {
        this.content = content;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        CustomerInvoice customerInvoice = (CustomerInvoice) o;
        return Objects.equals(this.purchaseOrderNumber, customerInvoice.purchaseOrderNumber)
                && Objects.equals(this.content, customerInvoice.content);
    }

    @Override
    public int hashCode() {
        return Objects.hash(purchaseOrderNumber, content);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class CustomerInvoice {\n");

        sb.append("    purchaseOrderNumber: ")
                .append(toIndentedString(purchaseOrderNumber))
                .append("\n");
        sb.append("    content: ").append(toIndentedString(content)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /** Convert the given object to string with each line indented by 4 spaces (except the first line). */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }
}
