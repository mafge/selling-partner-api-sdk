/*
 * The Selling Partner API for Amazon Warehousing and Distribution
 * The Selling Partner API for Amazon Warehousing and Distribution (AWD) provides programmatic access to information about AWD shipments and inventory.
 *
 * OpenAPI spec version: 2024-05-09
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package software.amazon.spapi.models.awd.v2024_05_09;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.Objects;

/** Destination details of an inbound order based on the assigned region and DC for the order. */
@Schema(description = "Destination details of an inbound order based on the assigned region and DC for the order.")
public class DestinationDetails {
    @SerializedName("destinationAddress")
    private Address destinationAddress = null;

    @SerializedName("destinationRegion")
    private String destinationRegion = null;

    @SerializedName("shipmentId")
    private String shipmentId = null;

    public DestinationDetails destinationAddress(Address destinationAddress) {
        this.destinationAddress = destinationAddress;
        return this;
    }

    /**
     * Get destinationAddress
     *
     * @return destinationAddress
     */
    @Schema(description = "")
    public Address getDestinationAddress() {
        return destinationAddress;
    }

    public void setDestinationAddress(Address destinationAddress) {
        this.destinationAddress = destinationAddress;
    }

    public DestinationDetails destinationRegion(String destinationRegion) {
        this.destinationRegion = destinationRegion;
        return this;
    }

    /**
     * Assigned region where the order will be shipped. This can differ from what was passed as preference. AWD
     * currently supports following region IDs: [us-west, us-east, us-southcentral, us-southeast]
     *
     * @return destinationRegion
     */
    @Schema(
            example = "us-west",
            description =
                    "Assigned region where the order will be shipped. This can differ from what was passed as preference. AWD currently supports following region IDs: [us-west, us-east, us-southcentral, us-southeast]")
    public String getDestinationRegion() {
        return destinationRegion;
    }

    public void setDestinationRegion(String destinationRegion) {
        this.destinationRegion = destinationRegion;
    }

    public DestinationDetails shipmentId(String shipmentId) {
        this.shipmentId = shipmentId;
        return this;
    }

    /**
     * Unique ID of the confirmed shipment being shipped to the assigned destination. This will be available only after
     * an inbound order is confirmed and can be used to track the shipment.
     *
     * @return shipmentId
     */
    @Schema(
            description =
                    "Unique ID of the confirmed shipment being shipped to the assigned destination. This will be available only after an inbound order is confirmed and can be used to track the shipment.")
    public String getShipmentId() {
        return shipmentId;
    }

    public void setShipmentId(String shipmentId) {
        this.shipmentId = shipmentId;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        DestinationDetails destinationDetails = (DestinationDetails) o;
        return Objects.equals(this.destinationAddress, destinationDetails.destinationAddress)
                && Objects.equals(this.destinationRegion, destinationDetails.destinationRegion)
                && Objects.equals(this.shipmentId, destinationDetails.shipmentId);
    }

    @Override
    public int hashCode() {
        return Objects.hash(destinationAddress, destinationRegion, shipmentId);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class DestinationDetails {\n");

        sb.append("    destinationAddress: ")
                .append(toIndentedString(destinationAddress))
                .append("\n");
        sb.append("    destinationRegion: ")
                .append(toIndentedString(destinationRegion))
                .append("\n");
        sb.append("    shipmentId: ").append(toIndentedString(shipmentId)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /** Convert the given object to string with each line indented by 4 spaces (except the first line). */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }
}
