/*
 * Selling Partner APIs for Fulfillment Outbound
 * The Selling Partner API for Fulfillment Outbound lets you create applications that help a seller fulfill Multi-Channel Fulfillment orders using their inventory in Amazon's fulfillment network. You can get information on both potential and existing fulfillment orders.
 *
 * OpenAPI spec version: 2020-07-01
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package software.amazon.spapi.models.fulfillment.outbound.v2020_07_01;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

/** The current delivery status of the package. */
@JsonAdapter(CurrentStatus.Adapter.class)
public enum CurrentStatus {
    @SerializedName("IN_TRANSIT")
    IN_TRANSIT("IN_TRANSIT"),
    @SerializedName("DELIVERED")
    DELIVERED("DELIVERED"),
    @SerializedName("RETURNING")
    RETURNING("RETURNING"),
    @SerializedName("RETURNED")
    RETURNED("RETURNED"),
    @SerializedName("UNDELIVERABLE")
    UNDELIVERABLE("UNDELIVERABLE"),
    @SerializedName("DELAYED")
    DELAYED("DELAYED"),
    @SerializedName("AVAILABLE_FOR_PICKUP")
    AVAILABLE_FOR_PICKUP("AVAILABLE_FOR_PICKUP"),
    @SerializedName("CUSTOMER_ACTION")
    CUSTOMER_ACTION("CUSTOMER_ACTION"),
    @SerializedName("UNKNOWN")
    UNKNOWN("UNKNOWN"),
    @SerializedName("OUT_FOR_DELIVERY")
    OUT_FOR_DELIVERY("OUT_FOR_DELIVERY"),
    @SerializedName("DELIVERY_ATTEMPTED")
    DELIVERY_ATTEMPTED("DELIVERY_ATTEMPTED"),
    @SerializedName("PICKUP_SUCCESSFUL")
    PICKUP_SUCCESSFUL("PICKUP_SUCCESSFUL"),
    @SerializedName("PICKUP_CANCELLED")
    PICKUP_CANCELLED("PICKUP_CANCELLED"),
    @SerializedName("PICKUP_ATTEMPTED")
    PICKUP_ATTEMPTED("PICKUP_ATTEMPTED"),
    @SerializedName("PICKUP_SCHEDULED")
    PICKUP_SCHEDULED("PICKUP_SCHEDULED"),
    @SerializedName("RETURN_REQUEST_ACCEPTED")
    RETURN_REQUEST_ACCEPTED("RETURN_REQUEST_ACCEPTED"),
    @SerializedName("REFUND_ISSUED")
    REFUND_ISSUED("REFUND_ISSUED"),
    @SerializedName("RETURN_RECEIVED_IN_FC")
    RETURN_RECEIVED_IN_FC("RETURN_RECEIVED_IN_FC");

    private String value;

    CurrentStatus(String value) {
        this.value = value;
    }

    public String getValue() {
        return value;
    }

    @Override
    public String toString() {
        return String.valueOf(value);
    }

    public static CurrentStatus fromValue(String input) {
        for (CurrentStatus b : CurrentStatus.values()) {
            if (b.value.equals(input)) {
                return b;
            }
        }
        return null;
    }

    public static class Adapter extends TypeAdapter<CurrentStatus> {
        @Override
        public void write(final JsonWriter jsonWriter, final CurrentStatus enumeration) throws IOException {
            jsonWriter.value(String.valueOf(enumeration.getValue()));
        }

        @Override
        public CurrentStatus read(final JsonReader jsonReader) throws IOException {
            Object value = jsonReader.nextString();
            return CurrentStatus.fromValue((String) (value));
        }
    }
}
