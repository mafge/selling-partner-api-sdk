/*
 * The Selling Partner API for Amazon Warehousing and Distribution
 * The Selling Partner API for Amazon Warehousing and Distribution (AWD) provides programmatic access to information about AWD shipments and inventory.
 *
 * OpenAPI spec version: 2024-05-09
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package software.amazon.spapi.models.awd.v2024_05_09;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;
import java.math.BigDecimal;
import java.util.Objects;

/** Quantity of inventory with an associated measurement unit context. */
@Schema(description = "Quantity of inventory with an associated measurement unit context.")
public class InventoryQuantity {
    @SerializedName("quantity")
    private BigDecimal quantity = null;

    @SerializedName("unitOfMeasurement")
    private InventoryUnitOfMeasurement unitOfMeasurement = null;

    public InventoryQuantity quantity(BigDecimal quantity) {
        this.quantity = quantity;
        return this;
    }

    /**
     * Quantity of the respective inventory.
     *
     * @return quantity
     */
    @Schema(required = true, description = "Quantity of the respective inventory.")
    public BigDecimal getQuantity() {
        return quantity;
    }

    public void setQuantity(BigDecimal quantity) {
        this.quantity = quantity;
    }

    public InventoryQuantity unitOfMeasurement(InventoryUnitOfMeasurement unitOfMeasurement) {
        this.unitOfMeasurement = unitOfMeasurement;
        return this;
    }

    /**
     * Get unitOfMeasurement
     *
     * @return unitOfMeasurement
     */
    @Schema(required = true, description = "")
    public InventoryUnitOfMeasurement getUnitOfMeasurement() {
        return unitOfMeasurement;
    }

    public void setUnitOfMeasurement(InventoryUnitOfMeasurement unitOfMeasurement) {
        this.unitOfMeasurement = unitOfMeasurement;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        InventoryQuantity inventoryQuantity = (InventoryQuantity) o;
        return Objects.equals(this.quantity, inventoryQuantity.quantity)
                && Objects.equals(this.unitOfMeasurement, inventoryQuantity.unitOfMeasurement);
    }

    @Override
    public int hashCode() {
        return Objects.hash(quantity, unitOfMeasurement);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class InventoryQuantity {\n");

        sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
        sb.append("    unitOfMeasurement: ")
                .append(toIndentedString(unitOfMeasurement))
                .append("\n");
        sb.append("}");
        return sb.toString();
    }

    /** Convert the given object to string with each line indented by 4 spaces (except the first line). */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }
}
