/*
 * The Selling Partner API for Amazon Warehousing and Distribution
 * The Selling Partner API for Amazon Warehousing and Distribution (AWD) provides programmatic access to information about AWD shipments and inventory.
 *
 * OpenAPI spec version: 2024-05-09
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package software.amazon.spapi.models.awd.v2024_05_09;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.Objects;

/** Preferences that can be passed in context of an inbound order */
@Schema(description = "Preferences that can be passed in context of an inbound order")
public class InboundPreferences {
    @SerializedName("destinationRegion")
    private String destinationRegion = null;

    public InboundPreferences destinationRegion(String destinationRegion) {
        this.destinationRegion = destinationRegion;
        return this;
    }

    /**
     * Pass a preferred region so that the inbound order can be shipped to an AWD warehouse located in that region. This
     * doesn&#x27;t guarantee the order to be assigned in the specified destination region as it depends on warehouse
     * capacity availability. AWD currently supports following region IDs: [us-west, us-east, us-southcentral,
     * us-southeast]
     *
     * @return destinationRegion
     */
    @Schema(
            description =
                    "Pass a preferred region so that the inbound order can be shipped to an AWD warehouse located in that region. This doesn't guarantee the order to be assigned in the specified destination region as it depends on warehouse capacity availability. AWD currently supports following region IDs: [us-west, us-east, us-southcentral, us-southeast]")
    public String getDestinationRegion() {
        return destinationRegion;
    }

    public void setDestinationRegion(String destinationRegion) {
        this.destinationRegion = destinationRegion;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        InboundPreferences inboundPreferences = (InboundPreferences) o;
        return Objects.equals(this.destinationRegion, inboundPreferences.destinationRegion);
    }

    @Override
    public int hashCode() {
        return Objects.hash(destinationRegion);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class InboundPreferences {\n");

        sb.append("    destinationRegion: ")
                .append(toIndentedString(destinationRegion))
                .append("\n");
        sb.append("}");
        return sb.toString();
    }

    /** Convert the given object to string with each line indented by 4 spaces (except the first line). */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }
}
