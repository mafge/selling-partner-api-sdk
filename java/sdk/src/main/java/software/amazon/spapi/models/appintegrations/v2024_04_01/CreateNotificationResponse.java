/*
 * The Selling Partner API for third party application integrations.
 * With the AppIntegrations API v2024-04-01, you can send notifications to Amazon Selling Partners and display the notifications in Seller Central.
 *
 * OpenAPI spec version: 2024-04-01
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package software.amazon.spapi.models.appintegrations.v2024_04_01;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.Objects;

/** The response for the &#x60;createNotification&#x60; operation. */
@Schema(description = "The response for the `createNotification` operation.")
public class CreateNotificationResponse {
    @SerializedName("notificationId")
    private String notificationId = null;

    public CreateNotificationResponse notificationId(String notificationId) {
        this.notificationId = notificationId;
        return this;
    }

    /**
     * The unique identifier assigned to each notification.
     *
     * @return notificationId
     */
    @Schema(description = "The unique identifier assigned to each notification.")
    public String getNotificationId() {
        return notificationId;
    }

    public void setNotificationId(String notificationId) {
        this.notificationId = notificationId;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        CreateNotificationResponse createNotificationResponse = (CreateNotificationResponse) o;
        return Objects.equals(this.notificationId, createNotificationResponse.notificationId);
    }

    @Override
    public int hashCode() {
        return Objects.hash(notificationId);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class CreateNotificationResponse {\n");

        sb.append("    notificationId: ")
                .append(toIndentedString(notificationId))
                .append("\n");
        sb.append("}");
        return sb.toString();
    }

    /** Convert the given object to string with each line indented by 4 spaces (except the first line). */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }
}
