/*
 * Selling Partner API for Pricing
 * The Selling Partner API for Pricing helps you programmatically retrieve product pricing and offer pricing information for Amazon Marketplace products.  For more information, refer to the [Product Pricing v2022-05-01 Use Case Guide](https://developer-docs.amazon.com/sp-api/docs/product-pricing-api-v2022-05-01-use-case-guide).
 *
 * OpenAPI spec version: 2022-05-01
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package software.amazon.spapi.models.pricing.v2022_05_01;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.Objects;

/** The schema for item&#x27;s price information, including listing price, shipping price, and Amazon Points. */
@Schema(
        description =
                "The schema for item's price information, including listing price, shipping price, and Amazon Points.")
public class Price {
    @SerializedName("listingPrice")
    private MoneyType listingPrice = null;

    @SerializedName("shippingPrice")
    private MoneyType shippingPrice = null;

    @SerializedName("points")
    private Points points = null;

    public Price listingPrice(MoneyType listingPrice) {
        this.listingPrice = listingPrice;
        return this;
    }

    /**
     * Get listingPrice
     *
     * @return listingPrice
     */
    @Schema(required = true, description = "")
    public MoneyType getListingPrice() {
        return listingPrice;
    }

    public void setListingPrice(MoneyType listingPrice) {
        this.listingPrice = listingPrice;
    }

    public Price shippingPrice(MoneyType shippingPrice) {
        this.shippingPrice = shippingPrice;
        return this;
    }

    /**
     * Get shippingPrice
     *
     * @return shippingPrice
     */
    @Schema(description = "")
    public MoneyType getShippingPrice() {
        return shippingPrice;
    }

    public void setShippingPrice(MoneyType shippingPrice) {
        this.shippingPrice = shippingPrice;
    }

    public Price points(Points points) {
        this.points = points;
        return this;
    }

    /**
     * Get points
     *
     * @return points
     */
    @Schema(description = "")
    public Points getPoints() {
        return points;
    }

    public void setPoints(Points points) {
        this.points = points;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        Price price = (Price) o;
        return Objects.equals(this.listingPrice, price.listingPrice)
                && Objects.equals(this.shippingPrice, price.shippingPrice)
                && Objects.equals(this.points, price.points);
    }

    @Override
    public int hashCode() {
        return Objects.hash(listingPrice, shippingPrice, points);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class Price {\n");

        sb.append("    listingPrice: ").append(toIndentedString(listingPrice)).append("\n");
        sb.append("    shippingPrice: ").append(toIndentedString(shippingPrice)).append("\n");
        sb.append("    points: ").append(toIndentedString(points)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /** Convert the given object to string with each line indented by 4 spaces (except the first line). */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }
}
