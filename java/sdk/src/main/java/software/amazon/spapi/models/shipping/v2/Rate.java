/*
 * Amazon Shipping API
 * The Amazon Shipping API is designed to support outbound shipping use cases both for orders originating on Amazon-owned marketplaces as well as external channels/marketplaces. With these APIs, you can request shipping rates, create shipments, cancel shipments, and track shipments.
 *
 * OpenAPI spec version: v2
 * Contact: swa-api-core@amazon.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package software.amazon.spapi.models.shipping.v2;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.Objects;

/** The details of a shipping service offering. */
@Schema(description = "The details of a shipping service offering.")
public class Rate {
    @SerializedName("rateId")
    private String rateId = null;

    @SerializedName("carrierId")
    private String carrierId = null;

    @SerializedName("carrierName")
    private String carrierName = null;

    @SerializedName("serviceId")
    private String serviceId = null;

    @SerializedName("serviceName")
    private String serviceName = null;

    @SerializedName("billedWeight")
    private Weight billedWeight = null;

    @SerializedName("totalCharge")
    private Currency totalCharge = null;

    @SerializedName("promise")
    private Promise promise = null;

    @SerializedName("supportedDocumentSpecifications")
    private SupportedDocumentSpecificationList supportedDocumentSpecifications = null;

    @SerializedName("availableValueAddedServiceGroups")
    private AvailableValueAddedServiceGroupList availableValueAddedServiceGroups = null;

    @SerializedName("requiresAdditionalInputs")
    private Boolean requiresAdditionalInputs = null;

    @SerializedName("rateItemList")
    private RateItemList rateItemList = null;

    @SerializedName("paymentType")
    private PaymentType paymentType = null;

    @SerializedName("benefits")
    private Benefits benefits = null;

    public Rate rateId(String rateId) {
        this.rateId = rateId;
        return this;
    }

    /**
     * Get rateId
     *
     * @return rateId
     */
    @Schema(required = true, description = "")
    public String getRateId() {
        return rateId;
    }

    public void setRateId(String rateId) {
        this.rateId = rateId;
    }

    public Rate carrierId(String carrierId) {
        this.carrierId = carrierId;
        return this;
    }

    /**
     * Get carrierId
     *
     * @return carrierId
     */
    @Schema(required = true, description = "")
    public String getCarrierId() {
        return carrierId;
    }

    public void setCarrierId(String carrierId) {
        this.carrierId = carrierId;
    }

    public Rate carrierName(String carrierName) {
        this.carrierName = carrierName;
        return this;
    }

    /**
     * Get carrierName
     *
     * @return carrierName
     */
    @Schema(required = true, description = "")
    public String getCarrierName() {
        return carrierName;
    }

    public void setCarrierName(String carrierName) {
        this.carrierName = carrierName;
    }

    public Rate serviceId(String serviceId) {
        this.serviceId = serviceId;
        return this;
    }

    /**
     * Get serviceId
     *
     * @return serviceId
     */
    @Schema(required = true, description = "")
    public String getServiceId() {
        return serviceId;
    }

    public void setServiceId(String serviceId) {
        this.serviceId = serviceId;
    }

    public Rate serviceName(String serviceName) {
        this.serviceName = serviceName;
        return this;
    }

    /**
     * Get serviceName
     *
     * @return serviceName
     */
    @Schema(required = true, description = "")
    public String getServiceName() {
        return serviceName;
    }

    public void setServiceName(String serviceName) {
        this.serviceName = serviceName;
    }

    public Rate billedWeight(Weight billedWeight) {
        this.billedWeight = billedWeight;
        return this;
    }

    /**
     * Get billedWeight
     *
     * @return billedWeight
     */
    @Schema(description = "")
    public Weight getBilledWeight() {
        return billedWeight;
    }

    public void setBilledWeight(Weight billedWeight) {
        this.billedWeight = billedWeight;
    }

    public Rate totalCharge(Currency totalCharge) {
        this.totalCharge = totalCharge;
        return this;
    }

    /**
     * Get totalCharge
     *
     * @return totalCharge
     */
    @Schema(required = true, description = "")
    public Currency getTotalCharge() {
        return totalCharge;
    }

    public void setTotalCharge(Currency totalCharge) {
        this.totalCharge = totalCharge;
    }

    public Rate promise(Promise promise) {
        this.promise = promise;
        return this;
    }

    /**
     * Get promise
     *
     * @return promise
     */
    @Schema(required = true, description = "")
    public Promise getPromise() {
        return promise;
    }

    public void setPromise(Promise promise) {
        this.promise = promise;
    }

    public Rate supportedDocumentSpecifications(SupportedDocumentSpecificationList supportedDocumentSpecifications) {
        this.supportedDocumentSpecifications = supportedDocumentSpecifications;
        return this;
    }

    /**
     * Get supportedDocumentSpecifications
     *
     * @return supportedDocumentSpecifications
     */
    @Schema(required = true, description = "")
    public SupportedDocumentSpecificationList getSupportedDocumentSpecifications() {
        return supportedDocumentSpecifications;
    }

    public void setSupportedDocumentSpecifications(SupportedDocumentSpecificationList supportedDocumentSpecifications) {
        this.supportedDocumentSpecifications = supportedDocumentSpecifications;
    }

    public Rate availableValueAddedServiceGroups(AvailableValueAddedServiceGroupList availableValueAddedServiceGroups) {
        this.availableValueAddedServiceGroups = availableValueAddedServiceGroups;
        return this;
    }

    /**
     * Get availableValueAddedServiceGroups
     *
     * @return availableValueAddedServiceGroups
     */
    @Schema(description = "")
    public AvailableValueAddedServiceGroupList getAvailableValueAddedServiceGroups() {
        return availableValueAddedServiceGroups;
    }

    public void setAvailableValueAddedServiceGroups(
            AvailableValueAddedServiceGroupList availableValueAddedServiceGroups) {
        this.availableValueAddedServiceGroups = availableValueAddedServiceGroups;
    }

    public Rate requiresAdditionalInputs(Boolean requiresAdditionalInputs) {
        this.requiresAdditionalInputs = requiresAdditionalInputs;
        return this;
    }

    /**
     * When true, indicates that additional inputs are required to purchase this shipment service. You must then call
     * the getAdditionalInputs operation to return the JSON schema to use when providing the additional inputs to the
     * purchaseShipment operation.
     *
     * @return requiresAdditionalInputs
     */
    @Schema(
            required = true,
            description =
                    "When true, indicates that additional inputs are required to purchase this shipment service. You must then call the getAdditionalInputs operation to return the JSON schema to use when providing the additional inputs to the purchaseShipment operation.")
    public Boolean isRequiresAdditionalInputs() {
        return requiresAdditionalInputs;
    }

    public void setRequiresAdditionalInputs(Boolean requiresAdditionalInputs) {
        this.requiresAdditionalInputs = requiresAdditionalInputs;
    }

    public Rate rateItemList(RateItemList rateItemList) {
        this.rateItemList = rateItemList;
        return this;
    }

    /**
     * Get rateItemList
     *
     * @return rateItemList
     */
    @Schema(description = "")
    public RateItemList getRateItemList() {
        return rateItemList;
    }

    public void setRateItemList(RateItemList rateItemList) {
        this.rateItemList = rateItemList;
    }

    public Rate paymentType(PaymentType paymentType) {
        this.paymentType = paymentType;
        return this;
    }

    /**
     * Get paymentType
     *
     * @return paymentType
     */
    @Schema(description = "")
    public PaymentType getPaymentType() {
        return paymentType;
    }

    public void setPaymentType(PaymentType paymentType) {
        this.paymentType = paymentType;
    }

    public Rate benefits(Benefits benefits) {
        this.benefits = benefits;
        return this;
    }

    /**
     * Get benefits
     *
     * @return benefits
     */
    @Schema(description = "")
    public Benefits getBenefits() {
        return benefits;
    }

    public void setBenefits(Benefits benefits) {
        this.benefits = benefits;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        Rate rate = (Rate) o;
        return Objects.equals(this.rateId, rate.rateId)
                && Objects.equals(this.carrierId, rate.carrierId)
                && Objects.equals(this.carrierName, rate.carrierName)
                && Objects.equals(this.serviceId, rate.serviceId)
                && Objects.equals(this.serviceName, rate.serviceName)
                && Objects.equals(this.billedWeight, rate.billedWeight)
                && Objects.equals(this.totalCharge, rate.totalCharge)
                && Objects.equals(this.promise, rate.promise)
                && Objects.equals(this.supportedDocumentSpecifications, rate.supportedDocumentSpecifications)
                && Objects.equals(this.availableValueAddedServiceGroups, rate.availableValueAddedServiceGroups)
                && Objects.equals(this.requiresAdditionalInputs, rate.requiresAdditionalInputs)
                && Objects.equals(this.rateItemList, rate.rateItemList)
                && Objects.equals(this.paymentType, rate.paymentType)
                && Objects.equals(this.benefits, rate.benefits);
    }

    @Override
    public int hashCode() {
        return Objects.hash(
                rateId,
                carrierId,
                carrierName,
                serviceId,
                serviceName,
                billedWeight,
                totalCharge,
                promise,
                supportedDocumentSpecifications,
                availableValueAddedServiceGroups,
                requiresAdditionalInputs,
                rateItemList,
                paymentType,
                benefits);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class Rate {\n");

        sb.append("    rateId: ").append(toIndentedString(rateId)).append("\n");
        sb.append("    carrierId: ").append(toIndentedString(carrierId)).append("\n");
        sb.append("    carrierName: ").append(toIndentedString(carrierName)).append("\n");
        sb.append("    serviceId: ").append(toIndentedString(serviceId)).append("\n");
        sb.append("    serviceName: ").append(toIndentedString(serviceName)).append("\n");
        sb.append("    billedWeight: ").append(toIndentedString(billedWeight)).append("\n");
        sb.append("    totalCharge: ").append(toIndentedString(totalCharge)).append("\n");
        sb.append("    promise: ").append(toIndentedString(promise)).append("\n");
        sb.append("    supportedDocumentSpecifications: ")
                .append(toIndentedString(supportedDocumentSpecifications))
                .append("\n");
        sb.append("    availableValueAddedServiceGroups: ")
                .append(toIndentedString(availableValueAddedServiceGroups))
                .append("\n");
        sb.append("    requiresAdditionalInputs: ")
                .append(toIndentedString(requiresAdditionalInputs))
                .append("\n");
        sb.append("    rateItemList: ").append(toIndentedString(rateItemList)).append("\n");
        sb.append("    paymentType: ").append(toIndentedString(paymentType)).append("\n");
        sb.append("    benefits: ").append(toIndentedString(benefits)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /** Convert the given object to string with each line indented by 4 spaces (except the first line). */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }
}
