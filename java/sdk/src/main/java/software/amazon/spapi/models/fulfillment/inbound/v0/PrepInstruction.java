/*
 * Selling Partner API for Fulfillment Inbound
 * The Selling Partner API for Fulfillment Inbound lets you create applications that create and update inbound shipments of inventory to Amazon's fulfillment network.
 *
 * OpenAPI spec version: v0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package software.amazon.spapi.models.fulfillment.inbound.v0;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

/**
 * Preparation instructions for shipping an item to Amazon&#x27;s fulfillment network. For more information about
 * preparing items for shipment to Amazon&#x27;s fulfillment network, see the Seller Central Help for your marketplace.
 */
@JsonAdapter(PrepInstruction.Adapter.class)
public enum PrepInstruction {
    @SerializedName("Polybagging")
    POLYBAGGING("Polybagging"),
    @SerializedName("BubbleWrapping")
    BUBBLEWRAPPING("BubbleWrapping"),
    @SerializedName("Taping")
    TAPING("Taping"),
    @SerializedName("BlackShrinkWrapping")
    BLACKSHRINKWRAPPING("BlackShrinkWrapping"),
    @SerializedName("Labeling")
    LABELING("Labeling"),
    @SerializedName("HangGarment")
    HANGGARMENT("HangGarment"),
    @SerializedName("SetCreation")
    SETCREATION("SetCreation"),
    @SerializedName("Boxing")
    BOXING("Boxing"),
    @SerializedName("RemoveFromHanger")
    REMOVEFROMHANGER("RemoveFromHanger"),
    @SerializedName("Debundle")
    DEBUNDLE("Debundle"),
    @SerializedName("SuffocationStickering")
    SUFFOCATIONSTICKERING("SuffocationStickering"),
    @SerializedName("CapSealing")
    CAPSEALING("CapSealing"),
    @SerializedName("SetStickering")
    SETSTICKERING("SetStickering"),
    @SerializedName("BlankStickering")
    BLANKSTICKERING("BlankStickering"),
    @SerializedName("ShipsInProductPackaging")
    SHIPSINPRODUCTPACKAGING("ShipsInProductPackaging"),
    @SerializedName("NoPrep")
    NOPREP("NoPrep");

    private String value;

    PrepInstruction(String value) {
        this.value = value;
    }

    public String getValue() {
        return value;
    }

    @Override
    public String toString() {
        return String.valueOf(value);
    }

    public static PrepInstruction fromValue(String input) {
        for (PrepInstruction b : PrepInstruction.values()) {
            if (b.value.equals(input)) {
                return b;
            }
        }
        return null;
    }

    public static class Adapter extends TypeAdapter<PrepInstruction> {
        @Override
        public void write(final JsonWriter jsonWriter, final PrepInstruction enumeration) throws IOException {
            jsonWriter.value(String.valueOf(enumeration.getValue()));
        }

        @Override
        public PrepInstruction read(final JsonReader jsonReader) throws IOException {
            Object value = jsonReader.nextString();
            return PrepInstruction.fromValue((String) (value));
        }
    }
}
