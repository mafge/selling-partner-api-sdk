/*
 * Selling Partner API for Retail Procurement Shipments
 * The Selling Partner API for Retail Procurement Shipments provides programmatic access to retail shipping data for vendors.
 *
 * OpenAPI spec version: v1
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package software.amazon.spapi.models.vendor.shipments.v1;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.Objects;

/**
 * Item details for be provided for every item in shipment at either the item or carton or pallet level, whichever is
 * appropriate.
 */
@Schema(
        description =
                "Item details for be provided for every item in shipment at either the item or carton or pallet level, whichever is appropriate.")
public class PackageItemDetails {
    @SerializedName("purchaseOrderNumber")
    private String purchaseOrderNumber = null;

    @SerializedName("lotNumber")
    private String lotNumber = null;

    @SerializedName("expiry")
    private Expiry expiry = null;

    public PackageItemDetails purchaseOrderNumber(String purchaseOrderNumber) {
        this.purchaseOrderNumber = purchaseOrderNumber;
        return this;
    }

    /**
     * The purchase order number for the shipment being confirmed. If the items in this shipment belong to multiple
     * purchase order numbers that are in particular carton or pallet within the shipment, then provide the
     * purchaseOrderNumber at the appropriate carton or pallet level. Formatting Notes: 8-character alpha-numeric code.
     *
     * @return purchaseOrderNumber
     */
    @Schema(
            description =
                    "The purchase order number for the shipment being confirmed. If the items in this shipment belong to multiple purchase order numbers that are in particular carton or pallet within the shipment, then provide the purchaseOrderNumber at the appropriate carton or pallet level. Formatting Notes: 8-character alpha-numeric code.")
    public String getPurchaseOrderNumber() {
        return purchaseOrderNumber;
    }

    public void setPurchaseOrderNumber(String purchaseOrderNumber) {
        this.purchaseOrderNumber = purchaseOrderNumber;
    }

    public PackageItemDetails lotNumber(String lotNumber) {
        this.lotNumber = lotNumber;
        return this;
    }

    /**
     * The batch or lot number associates an item with information the manufacturer considers relevant for traceability
     * of the trade item to which the Element String is applied. The data may refer to the trade item itself or to items
     * contained. This field is mandatory for all perishable items.
     *
     * @return lotNumber
     */
    @Schema(
            description =
                    "The batch or lot number associates an item with information the manufacturer considers relevant for traceability of the trade item to which the Element String is applied. The data may refer to the trade item itself or to items contained. This field is mandatory for all perishable items.")
    public String getLotNumber() {
        return lotNumber;
    }

    public void setLotNumber(String lotNumber) {
        this.lotNumber = lotNumber;
    }

    public PackageItemDetails expiry(Expiry expiry) {
        this.expiry = expiry;
        return this;
    }

    /**
     * Get expiry
     *
     * @return expiry
     */
    @Schema(description = "")
    public Expiry getExpiry() {
        return expiry;
    }

    public void setExpiry(Expiry expiry) {
        this.expiry = expiry;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        PackageItemDetails packageItemDetails = (PackageItemDetails) o;
        return Objects.equals(this.purchaseOrderNumber, packageItemDetails.purchaseOrderNumber)
                && Objects.equals(this.lotNumber, packageItemDetails.lotNumber)
                && Objects.equals(this.expiry, packageItemDetails.expiry);
    }

    @Override
    public int hashCode() {
        return Objects.hash(purchaseOrderNumber, lotNumber, expiry);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class PackageItemDetails {\n");

        sb.append("    purchaseOrderNumber: ")
                .append(toIndentedString(purchaseOrderNumber))
                .append("\n");
        sb.append("    lotNumber: ").append(toIndentedString(lotNumber)).append("\n");
        sb.append("    expiry: ").append(toIndentedString(expiry)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /** Convert the given object to string with each line indented by 4 spaces (except the first line). */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }
}
