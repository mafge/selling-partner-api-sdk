/*
 * Selling Partner API for Fulfillment Inbound
 * The Selling Partner API for Fulfillment Inbound lets you create applications that create and update inbound shipments of inventory to Amazon's fulfillment network.
 *
 * OpenAPI spec version: v0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package software.amazon.spapi.models.fulfillment.inbound.v0;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

/**
 * Indicates the status of the inbound shipment. When used with the createInboundShipment operation, WORKING is the only
 * valid value. When used with the updateInboundShipment operation, possible values are WORKING, SHIPPED or CANCELLED.
 */
@JsonAdapter(ShipmentStatus.Adapter.class)
public enum ShipmentStatus {
    @SerializedName("WORKING")
    WORKING("WORKING"),
    @SerializedName("SHIPPED")
    SHIPPED("SHIPPED"),
    @SerializedName("RECEIVING")
    RECEIVING("RECEIVING"),
    @SerializedName("CANCELLED")
    CANCELLED("CANCELLED"),
    @SerializedName("DELETED")
    DELETED("DELETED"),
    @SerializedName("CLOSED")
    CLOSED("CLOSED"),
    @SerializedName("ERROR")
    ERROR("ERROR"),
    @SerializedName("IN_TRANSIT")
    IN_TRANSIT("IN_TRANSIT"),
    @SerializedName("DELIVERED")
    DELIVERED("DELIVERED"),
    @SerializedName("CHECKED_IN")
    CHECKED_IN("CHECKED_IN");

    private String value;

    ShipmentStatus(String value) {
        this.value = value;
    }

    public String getValue() {
        return value;
    }

    @Override
    public String toString() {
        return String.valueOf(value);
    }

    public static ShipmentStatus fromValue(String input) {
        for (ShipmentStatus b : ShipmentStatus.values()) {
            if (b.value.equals(input)) {
                return b;
            }
        }
        return null;
    }

    public static class Adapter extends TypeAdapter<ShipmentStatus> {
        @Override
        public void write(final JsonWriter jsonWriter, final ShipmentStatus enumeration) throws IOException {
            jsonWriter.value(String.valueOf(enumeration.getValue()));
        }

        @Override
        public ShipmentStatus read(final JsonReader jsonReader) throws IOException {
            Object value = jsonReader.nextString();
            return ShipmentStatus.fromValue((String) (value));
        }
    }
}
