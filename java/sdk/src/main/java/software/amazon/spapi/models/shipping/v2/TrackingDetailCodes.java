/*
 * Amazon Shipping API
 * The Amazon Shipping API is designed to support outbound shipping use cases both for orders originating on Amazon-owned marketplaces as well as external channels/marketplaces. With these APIs, you can request shipping rates, create shipments, cancel shipments, and track shipments.
 *
 * OpenAPI spec version: v2
 * Contact: swa-api-core@amazon.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package software.amazon.spapi.models.shipping.v2;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/** Contains detail codes that provide additional details related to the forward and return leg of the shipment. */
@Schema(
        description =
                "Contains detail codes that provide additional details related to the forward and return leg of the shipment.")
public class TrackingDetailCodes {
    @SerializedName("forward")
    private List<DetailCodes> forward = new ArrayList<DetailCodes>();

    @SerializedName("returns")
    private List<DetailCodes> returns = new ArrayList<DetailCodes>();

    public TrackingDetailCodes forward(List<DetailCodes> forward) {
        this.forward = forward;
        return this;
    }

    public TrackingDetailCodes addForwardItem(DetailCodes forwardItem) {
        this.forward.add(forwardItem);
        return this;
    }

    /**
     * Contains detail codes that provide additional details related to the forward leg of the shipment.
     *
     * @return forward
     */
    @Schema(
            required = true,
            description =
                    "Contains detail codes that provide additional details related to the forward leg of the shipment.")
    public List<DetailCodes> getForward() {
        return forward;
    }

    public void setForward(List<DetailCodes> forward) {
        this.forward = forward;
    }

    public TrackingDetailCodes returns(List<DetailCodes> returns) {
        this.returns = returns;
        return this;
    }

    public TrackingDetailCodes addReturnsItem(DetailCodes returnsItem) {
        this.returns.add(returnsItem);
        return this;
    }

    /**
     * Contains detail codes that provide additional details related to the return leg of the shipment.
     *
     * @return returns
     */
    @Schema(
            required = true,
            description =
                    "Contains detail codes that provide additional details related to the return leg of the shipment.")
    public List<DetailCodes> getReturns() {
        return returns;
    }

    public void setReturns(List<DetailCodes> returns) {
        this.returns = returns;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        TrackingDetailCodes trackingDetailCodes = (TrackingDetailCodes) o;
        return Objects.equals(this.forward, trackingDetailCodes.forward)
                && Objects.equals(this.returns, trackingDetailCodes.returns);
    }

    @Override
    public int hashCode() {
        return Objects.hash(forward, returns);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class TrackingDetailCodes {\n");

        sb.append("    forward: ").append(toIndentedString(forward)).append("\n");
        sb.append("    returns: ").append(toIndentedString(returns)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /** Convert the given object to string with each line indented by 4 spaces (except the first line). */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }
}
