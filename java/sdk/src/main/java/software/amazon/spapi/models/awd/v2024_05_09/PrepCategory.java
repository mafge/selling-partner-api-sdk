/*
 * The Selling Partner API for Amazon Warehousing and Distribution
 * The Selling Partner API for Amazon Warehousing and Distribution (AWD) provides programmatic access to information about AWD shipments and inventory.
 *
 * OpenAPI spec version: 2024-05-09
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package software.amazon.spapi.models.awd.v2024_05_09;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

/** The preparation category for shipping an item to Amazon&#x27;s fulfillment network. */
@JsonAdapter(PrepCategory.Adapter.class)
public enum PrepCategory {
    @SerializedName("ADULT")
    ADULT("ADULT"),
    @SerializedName("BABY")
    BABY("BABY"),
    @SerializedName("FC_PROVIDED")
    FC_PROVIDED("FC_PROVIDED"),
    @SerializedName("FRAGILE")
    FRAGILE("FRAGILE"),
    @SerializedName("GRANULAR")
    GRANULAR("GRANULAR"),
    @SerializedName("HANGER")
    HANGER("HANGER"),
    @SerializedName("LIQUID")
    LIQUID("LIQUID"),
    @SerializedName("PERFORATED")
    PERFORATED("PERFORATED"),
    @SerializedName("SET")
    SET("SET"),
    @SerializedName("SHARP")
    SHARP("SHARP"),
    @SerializedName("SMALL")
    SMALL("SMALL"),
    @SerializedName("TEXTILE")
    TEXTILE("TEXTILE"),
    @SerializedName("NO_PREP")
    NO_PREP("NO_PREP"),
    @SerializedName("UNKNOWN")
    UNKNOWN("UNKNOWN");

    private String value;

    PrepCategory(String value) {
        this.value = value;
    }

    public String getValue() {
        return value;
    }

    @Override
    public String toString() {
        return String.valueOf(value);
    }

    public static PrepCategory fromValue(String input) {
        for (PrepCategory b : PrepCategory.values()) {
            if (b.value.equals(input)) {
                return b;
            }
        }
        return null;
    }

    public static class Adapter extends TypeAdapter<PrepCategory> {
        @Override
        public void write(final JsonWriter jsonWriter, final PrepCategory enumeration) throws IOException {
            jsonWriter.value(String.valueOf(enumeration.getValue()));
        }

        @Override
        public PrepCategory read(final JsonReader jsonReader) throws IOException {
            Object value = jsonReader.nextString();
            return PrepCategory.fromValue((String) (value));
        }
    }
}
