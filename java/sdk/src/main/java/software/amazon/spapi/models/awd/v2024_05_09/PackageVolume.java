/*
 * The Selling Partner API for Amazon Warehousing and Distribution
 * The Selling Partner API for Amazon Warehousing and Distribution (AWD) provides programmatic access to information about AWD shipments and inventory.
 *
 * OpenAPI spec version: 2024-05-09
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package software.amazon.spapi.models.awd.v2024_05_09;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.Objects;

/** Represents the volume of the package with a unit of measurement. */
@Schema(description = "Represents the volume of the package with a unit of measurement.")
public class PackageVolume {
    @SerializedName("unitOfMeasurement")
    private VolumeUnitOfMeasurement unitOfMeasurement = null;

    @SerializedName("volume")
    private Double volume = null;

    public PackageVolume unitOfMeasurement(VolumeUnitOfMeasurement unitOfMeasurement) {
        this.unitOfMeasurement = unitOfMeasurement;
        return this;
    }

    /**
     * Get unitOfMeasurement
     *
     * @return unitOfMeasurement
     */
    @Schema(required = true, description = "")
    public VolumeUnitOfMeasurement getUnitOfMeasurement() {
        return unitOfMeasurement;
    }

    public void setUnitOfMeasurement(VolumeUnitOfMeasurement unitOfMeasurement) {
        this.unitOfMeasurement = unitOfMeasurement;
    }

    public PackageVolume volume(Double volume) {
        this.volume = volume;
        return this;
    }

    /**
     * The package volume value.
     *
     * @return volume
     */
    @Schema(required = true, description = "The package volume value.")
    public Double getVolume() {
        return volume;
    }

    public void setVolume(Double volume) {
        this.volume = volume;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        PackageVolume packageVolume = (PackageVolume) o;
        return Objects.equals(this.unitOfMeasurement, packageVolume.unitOfMeasurement)
                && Objects.equals(this.volume, packageVolume.volume);
    }

    @Override
    public int hashCode() {
        return Objects.hash(unitOfMeasurement, volume);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class PackageVolume {\n");

        sb.append("    unitOfMeasurement: ")
                .append(toIndentedString(unitOfMeasurement))
                .append("\n");
        sb.append("    volume: ").append(toIndentedString(volume)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /** Convert the given object to string with each line indented by 4 spaces (except the first line). */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }
}
