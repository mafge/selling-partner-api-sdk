/*
 * Selling Partner API for Easy Ship
 * Use the Selling Partner API for Easy Ship to build applications for sellers to manage and ship Amazon Easy Ship orders. With this API, you can get available time slots, schedule and reschedule Easy Ship orders, and print shipping labels, invoices, and warranties. To review the differences in Easy Ship operations by marketplace, refer to [Marketplace support](https://developer-docs.amazon.com/sp-api/docs/easyship-api-v2022-03-23-use-case-guide#marketplace-support).
 *
 * OpenAPI spec version: 2022-03-23
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package software.amazon.spapi.models.easyship.v2022_03_23;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.Objects;

/** The request schema for the &#x60;createScheduledPackage&#x60; operation. */
@Schema(description = "The request schema for the `createScheduledPackage` operation.")
public class CreateScheduledPackageRequest {
    @SerializedName("amazonOrderId")
    private String amazonOrderId = null;

    @SerializedName("marketplaceId")
    private String marketplaceId = null;

    @SerializedName("packageDetails")
    private PackageDetails packageDetails = null;

    public CreateScheduledPackageRequest amazonOrderId(String amazonOrderId) {
        this.amazonOrderId = amazonOrderId;
        return this;
    }

    /**
     * Get amazonOrderId
     *
     * @return amazonOrderId
     */
    @Schema(required = true, description = "")
    public String getAmazonOrderId() {
        return amazonOrderId;
    }

    public void setAmazonOrderId(String amazonOrderId) {
        this.amazonOrderId = amazonOrderId;
    }

    public CreateScheduledPackageRequest marketplaceId(String marketplaceId) {
        this.marketplaceId = marketplaceId;
        return this;
    }

    /**
     * Get marketplaceId
     *
     * @return marketplaceId
     */
    @Schema(required = true, description = "")
    public String getMarketplaceId() {
        return marketplaceId;
    }

    public void setMarketplaceId(String marketplaceId) {
        this.marketplaceId = marketplaceId;
    }

    public CreateScheduledPackageRequest packageDetails(PackageDetails packageDetails) {
        this.packageDetails = packageDetails;
        return this;
    }

    /**
     * Get packageDetails
     *
     * @return packageDetails
     */
    @Schema(required = true, description = "")
    public PackageDetails getPackageDetails() {
        return packageDetails;
    }

    public void setPackageDetails(PackageDetails packageDetails) {
        this.packageDetails = packageDetails;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        CreateScheduledPackageRequest createScheduledPackageRequest = (CreateScheduledPackageRequest) o;
        return Objects.equals(this.amazonOrderId, createScheduledPackageRequest.amazonOrderId)
                && Objects.equals(this.marketplaceId, createScheduledPackageRequest.marketplaceId)
                && Objects.equals(this.packageDetails, createScheduledPackageRequest.packageDetails);
    }

    @Override
    public int hashCode() {
        return Objects.hash(amazonOrderId, marketplaceId, packageDetails);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class CreateScheduledPackageRequest {\n");

        sb.append("    amazonOrderId: ").append(toIndentedString(amazonOrderId)).append("\n");
        sb.append("    marketplaceId: ").append(toIndentedString(marketplaceId)).append("\n");
        sb.append("    packageDetails: ")
                .append(toIndentedString(packageDetails))
                .append("\n");
        sb.append("}");
        return sb.toString();
    }

    /** Convert the given object to string with each line indented by 4 spaces (except the first line). */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }
}
