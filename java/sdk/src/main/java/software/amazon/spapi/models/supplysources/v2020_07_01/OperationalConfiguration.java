/*
 * Selling Partner API for Supply Sources
 * Manage configurations and capabilities of seller supply sources.
 *
 * OpenAPI spec version: 2020-07-01
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package software.amazon.spapi.models.supplysources.v2020_07_01;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.Objects;

/** The operational configuration of &#x60;supplySources&#x60;. */
@Schema(description = "The operational configuration of `supplySources`.")
public class OperationalConfiguration {
    @SerializedName("contactDetails")
    private ContactDetails contactDetails = null;

    @SerializedName("throughputConfig")
    private ThroughputConfig throughputConfig = null;

    @SerializedName("operatingHoursByDay")
    private OperatingHoursByDay operatingHoursByDay = null;

    @SerializedName("handlingTime")
    private Duration handlingTime = null;

    public OperationalConfiguration contactDetails(ContactDetails contactDetails) {
        this.contactDetails = contactDetails;
        return this;
    }

    /**
     * Get contactDetails
     *
     * @return contactDetails
     */
    @Schema(description = "")
    public ContactDetails getContactDetails() {
        return contactDetails;
    }

    public void setContactDetails(ContactDetails contactDetails) {
        this.contactDetails = contactDetails;
    }

    public OperationalConfiguration throughputConfig(ThroughputConfig throughputConfig) {
        this.throughputConfig = throughputConfig;
        return this;
    }

    /**
     * Get throughputConfig
     *
     * @return throughputConfig
     */
    @Schema(description = "")
    public ThroughputConfig getThroughputConfig() {
        return throughputConfig;
    }

    public void setThroughputConfig(ThroughputConfig throughputConfig) {
        this.throughputConfig = throughputConfig;
    }

    public OperationalConfiguration operatingHoursByDay(OperatingHoursByDay operatingHoursByDay) {
        this.operatingHoursByDay = operatingHoursByDay;
        return this;
    }

    /**
     * Get operatingHoursByDay
     *
     * @return operatingHoursByDay
     */
    @Schema(description = "")
    public OperatingHoursByDay getOperatingHoursByDay() {
        return operatingHoursByDay;
    }

    public void setOperatingHoursByDay(OperatingHoursByDay operatingHoursByDay) {
        this.operatingHoursByDay = operatingHoursByDay;
    }

    public OperationalConfiguration handlingTime(Duration handlingTime) {
        this.handlingTime = handlingTime;
        return this;
    }

    /**
     * Get handlingTime
     *
     * @return handlingTime
     */
    @Schema(description = "")
    public Duration getHandlingTime() {
        return handlingTime;
    }

    public void setHandlingTime(Duration handlingTime) {
        this.handlingTime = handlingTime;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        OperationalConfiguration operationalConfiguration = (OperationalConfiguration) o;
        return Objects.equals(this.contactDetails, operationalConfiguration.contactDetails)
                && Objects.equals(this.throughputConfig, operationalConfiguration.throughputConfig)
                && Objects.equals(this.operatingHoursByDay, operationalConfiguration.operatingHoursByDay)
                && Objects.equals(this.handlingTime, operationalConfiguration.handlingTime);
    }

    @Override
    public int hashCode() {
        return Objects.hash(contactDetails, throughputConfig, operatingHoursByDay, handlingTime);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class OperationalConfiguration {\n");

        sb.append("    contactDetails: ")
                .append(toIndentedString(contactDetails))
                .append("\n");
        sb.append("    throughputConfig: ")
                .append(toIndentedString(throughputConfig))
                .append("\n");
        sb.append("    operatingHoursByDay: ")
                .append(toIndentedString(operatingHoursByDay))
                .append("\n");
        sb.append("    handlingTime: ").append(toIndentedString(handlingTime)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /** Convert the given object to string with each line indented by 4 spaces (except the first line). */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }
}
