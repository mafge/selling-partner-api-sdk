/*
 * Selling Partner API for Retail Procurement Shipments
 * The Selling Partner API for Retail Procurement Shipments provides programmatic access to retail shipping data for vendors.
 *
 * OpenAPI spec version: v1
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package software.amazon.spapi.models.vendor.shipments.v1;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.Objects;

/** Shipment Information details for Label request. */
@Schema(description = "Shipment Information details for Label request.")
public class ShipmentInformation {
    @SerializedName("vendorDetails")
    private VendorDetails vendorDetails = null;

    @SerializedName("buyerReferenceNumber")
    private String buyerReferenceNumber = null;

    @SerializedName("shipToParty")
    private PartyIdentification shipToParty = null;

    @SerializedName("shipFromParty")
    private PartyIdentification shipFromParty = null;

    @SerializedName("warehouseId")
    private String warehouseId = null;

    @SerializedName("masterTrackingId")
    private String masterTrackingId = null;

    @SerializedName("totalLabelCount")
    private Integer totalLabelCount = null;

    /** Type of shipment whether it is Small Parcel */
    @JsonAdapter(ShipModeEnum.Adapter.class)
    public enum ShipModeEnum {
        @SerializedName("SmallParcel")
        SMALLPARCEL("SmallParcel"),
        @SerializedName("LTL")
        LTL("LTL");

        private String value;

        ShipModeEnum(String value) {
            this.value = value;
        }

        public String getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

        public static ShipModeEnum fromValue(String input) {
            for (ShipModeEnum b : ShipModeEnum.values()) {
                if (b.value.equals(input)) {
                    return b;
                }
            }
            return null;
        }

        public static class Adapter extends TypeAdapter<ShipModeEnum> {
            @Override
            public void write(final JsonWriter jsonWriter, final ShipModeEnum enumeration) throws IOException {
                jsonWriter.value(String.valueOf(enumeration.getValue()));
            }

            @Override
            public ShipModeEnum read(final JsonReader jsonReader) throws IOException {
                Object value = jsonReader.nextString();
                return ShipModeEnum.fromValue((String) (value));
            }
        }
    }

    @SerializedName("shipMode")
    private ShipModeEnum shipMode = null;

    public ShipmentInformation vendorDetails(VendorDetails vendorDetails) {
        this.vendorDetails = vendorDetails;
        return this;
    }

    /**
     * Get vendorDetails
     *
     * @return vendorDetails
     */
    @Schema(description = "")
    public VendorDetails getVendorDetails() {
        return vendorDetails;
    }

    public void setVendorDetails(VendorDetails vendorDetails) {
        this.vendorDetails = vendorDetails;
    }

    public ShipmentInformation buyerReferenceNumber(String buyerReferenceNumber) {
        this.buyerReferenceNumber = buyerReferenceNumber;
        return this;
    }

    /**
     * The buyer reference number is a unique identifier generated by the buyer for all Collect and WePay shipments.
     *
     * @return buyerReferenceNumber
     */
    @Schema(
            description =
                    "The buyer reference number is a unique identifier generated by the buyer for all Collect and WePay shipments.")
    public String getBuyerReferenceNumber() {
        return buyerReferenceNumber;
    }

    public void setBuyerReferenceNumber(String buyerReferenceNumber) {
        this.buyerReferenceNumber = buyerReferenceNumber;
    }

    public ShipmentInformation shipToParty(PartyIdentification shipToParty) {
        this.shipToParty = shipToParty;
        return this;
    }

    /**
     * Get shipToParty
     *
     * @return shipToParty
     */
    @Schema(description = "")
    public PartyIdentification getShipToParty() {
        return shipToParty;
    }

    public void setShipToParty(PartyIdentification shipToParty) {
        this.shipToParty = shipToParty;
    }

    public ShipmentInformation shipFromParty(PartyIdentification shipFromParty) {
        this.shipFromParty = shipFromParty;
        return this;
    }

    /**
     * Get shipFromParty
     *
     * @return shipFromParty
     */
    @Schema(description = "")
    public PartyIdentification getShipFromParty() {
        return shipFromParty;
    }

    public void setShipFromParty(PartyIdentification shipFromParty) {
        this.shipFromParty = shipFromParty;
    }

    public ShipmentInformation warehouseId(String warehouseId) {
        this.warehouseId = warehouseId;
        return this;
    }

    /**
     * Vendor Warehouse ID from where the shipment is scheduled to be picked up by buyer / Carrier.
     *
     * @return warehouseId
     */
    @Schema(
            description =
                    "Vendor Warehouse ID from where the shipment is scheduled to be picked up by buyer / Carrier.")
    public String getWarehouseId() {
        return warehouseId;
    }

    public void setWarehouseId(String warehouseId) {
        this.warehouseId = warehouseId;
    }

    public ShipmentInformation masterTrackingId(String masterTrackingId) {
        this.masterTrackingId = masterTrackingId;
        return this;
    }

    /**
     * Unique Id with which the shipment can be tracked for Small Parcels.
     *
     * @return masterTrackingId
     */
    @Schema(description = "Unique Id with  which  the shipment can be tracked for Small Parcels.")
    public String getMasterTrackingId() {
        return masterTrackingId;
    }

    public void setMasterTrackingId(String masterTrackingId) {
        this.masterTrackingId = masterTrackingId;
    }

    public ShipmentInformation totalLabelCount(Integer totalLabelCount) {
        this.totalLabelCount = totalLabelCount;
        return this;
    }

    /**
     * Number of Labels that are created as part of this shipment.
     *
     * @return totalLabelCount
     */
    @Schema(description = "Number of Labels that are created as part of this shipment.")
    public Integer getTotalLabelCount() {
        return totalLabelCount;
    }

    public void setTotalLabelCount(Integer totalLabelCount) {
        this.totalLabelCount = totalLabelCount;
    }

    public ShipmentInformation shipMode(ShipModeEnum shipMode) {
        this.shipMode = shipMode;
        return this;
    }

    /**
     * Type of shipment whether it is Small Parcel
     *
     * @return shipMode
     */
    @Schema(description = "Type of shipment whether it is Small Parcel")
    public ShipModeEnum getShipMode() {
        return shipMode;
    }

    public void setShipMode(ShipModeEnum shipMode) {
        this.shipMode = shipMode;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ShipmentInformation shipmentInformation = (ShipmentInformation) o;
        return Objects.equals(this.vendorDetails, shipmentInformation.vendorDetails)
                && Objects.equals(this.buyerReferenceNumber, shipmentInformation.buyerReferenceNumber)
                && Objects.equals(this.shipToParty, shipmentInformation.shipToParty)
                && Objects.equals(this.shipFromParty, shipmentInformation.shipFromParty)
                && Objects.equals(this.warehouseId, shipmentInformation.warehouseId)
                && Objects.equals(this.masterTrackingId, shipmentInformation.masterTrackingId)
                && Objects.equals(this.totalLabelCount, shipmentInformation.totalLabelCount)
                && Objects.equals(this.shipMode, shipmentInformation.shipMode);
    }

    @Override
    public int hashCode() {
        return Objects.hash(
                vendorDetails,
                buyerReferenceNumber,
                shipToParty,
                shipFromParty,
                warehouseId,
                masterTrackingId,
                totalLabelCount,
                shipMode);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class ShipmentInformation {\n");

        sb.append("    vendorDetails: ").append(toIndentedString(vendorDetails)).append("\n");
        sb.append("    buyerReferenceNumber: ")
                .append(toIndentedString(buyerReferenceNumber))
                .append("\n");
        sb.append("    shipToParty: ").append(toIndentedString(shipToParty)).append("\n");
        sb.append("    shipFromParty: ").append(toIndentedString(shipFromParty)).append("\n");
        sb.append("    warehouseId: ").append(toIndentedString(warehouseId)).append("\n");
        sb.append("    masterTrackingId: ")
                .append(toIndentedString(masterTrackingId))
                .append("\n");
        sb.append("    totalLabelCount: ")
                .append(toIndentedString(totalLabelCount))
                .append("\n");
        sb.append("    shipMode: ").append(toIndentedString(shipMode)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /** Convert the given object to string with each line indented by 4 spaces (except the first line). */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }
}
